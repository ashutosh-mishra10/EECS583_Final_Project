digraph "CFG for 'gemm2' function" {
	label="CFG for 'gemm2' function";

	Node0x5632b63a9390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%6:\l  %7 = alloca [12544 x float], align 16\l  %8 = bitcast [12544 x float]* %7 to i8*\l  br label %10\l}"];
	Node0x5632b63a9390 -> Node0x5632b63a9430;
	Node0x5632b63a93e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%9:\l9:                                                \l  ret void\l}"];
	Node0x5632b63a9430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%10:\l10:                                               \l  %11 = phi i64 [ 0, %6 ], [ %36, %35 ]\l  call void @llvm.lifetime.start.p0i8(i64 50176, i8* nonnull %8) #3\l  %12 = getelementptr inbounds float, float* %1, i64 %11\l  %13 = load float, float* %12, align 4, !tbaa !3\l  br label %14\l}"];
	Node0x5632b63a9430 -> Node0x5632b63a9480;
	Node0x5632b63a9480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%14:\l14:                                               \l  %15 = phi i64 [ 0, %10 ], [ %17, %14 ]\l  %16 = getelementptr inbounds [12544 x float], [12544 x float]* %7, i64 0,\l... i64 %15\l  store float %13, float* %16, align 4, !tbaa !3\l  %17 = add nuw nsw i64 %15, 1\l  %18 = icmp eq i64 %17, 12544\l  br i1 %18, label %.preheader2, label %14, !llvm.loop !7\l|{<s0>T|<s1>F}}"];
	Node0x5632b63a9480:s0 -> Node0x5632b63a94d0;
	Node0x5632b63a9480:s1 -> Node0x5632b63a9480;
	Node0x5632b63a94d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{.preheader2:                                      \l  %19 = phi i64 [ %23, %22 ], [ 0, %14 ]\l  %20 = getelementptr inbounds [32 x float], [32 x float]* %0, i64 %11, i64 %19\l  %21 = load float, float* %20, align 4, !tbaa !3\l  br label %25\l}"];
	Node0x5632b63a94d0 -> Node0x5632b63a9570;
	Node0x5632b63a9520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%22:\l22:                                               \l  %23 = add nuw nsw i64 %19, 1\l  %24 = icmp eq i64 %23, 32\l  br i1 %24, label %.preheader, label %.preheader2, !llvm.loop !10\l|{<s0>T|<s1>F}}"];
	Node0x5632b63a9520:s0 -> Node0x5632b63a9610;
	Node0x5632b63a9520:s1 -> Node0x5632b63a94d0;
	Node0x5632b63a9570 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%25:\l25:                                               \l  %26 = phi i64 [ 0, %.preheader2 ], [ %33, %25 ]\l  %27 = getelementptr inbounds [12544 x float], [12544 x float]* %2, i64 %19,\l... i64 %26\l  %28 = load float, float* %27, align 4, !tbaa !3\l  %29 = fmul float %21, %28\l  %30 = getelementptr inbounds [12544 x float], [12544 x float]* %7, i64 0,\l... i64 %26\l  %31 = load float, float* %30, align 4, !tbaa !3\l  %32 = fadd float %31, %29\l  store float %32, float* %30, align 4, !tbaa !3\l  %33 = add nuw nsw i64 %26, 1\l  %34 = icmp eq i64 %33, 12544\l  br i1 %34, label %22, label %25, !llvm.loop !11\l|{<s0>T|<s1>F}}"];
	Node0x5632b63a9570:s0 -> Node0x5632b63a9520;
	Node0x5632b63a9570:s1 -> Node0x5632b63a9570;
	Node0x5632b63a95c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%35:\l35:                                               \l  call void @llvm.lifetime.end.p0i8(i64 50176, i8* nonnull %8) #3\l  %36 = add nuw nsw i64 %11, 1\l  %37 = icmp eq i64 %36, 64\l  br i1 %37, label %9, label %10, !llvm.loop !12\l|{<s0>T|<s1>F}}"];
	Node0x5632b63a95c0:s0 -> Node0x5632b63a93e0;
	Node0x5632b63a95c0:s1 -> Node0x5632b63a9430;
	Node0x5632b63a9610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{.preheader:                                       \l  %38 = phi i64 [ %44, %.preheader ], [ 0, %22 ]\l  %39 = getelementptr inbounds [12544 x float], [12544 x float]* %7, i64 0,\l... i64 %38\l  %40 = load float, float* %39, align 4, !tbaa !3\l  %41 = call float @max(float noundef %40, float noundef %4)\l  %42 = call float @min(float noundef %41, float noundef %5)\l  %43 = getelementptr inbounds [12544 x float], [12544 x float]* %3, i64 %11,\l... i64 %38\l  store float %42, float* %43, align 4, !tbaa !3\l  %44 = add nuw nsw i64 %38, 1\l  %45 = icmp eq i64 %44, 12544\l  br i1 %45, label %35, label %.preheader, !llvm.loop !13\l|{<s0>T|<s1>F}}"];
	Node0x5632b63a9610:s0 -> Node0x5632b63a95c0;
	Node0x5632b63a9610:s1 -> Node0x5632b63a9610;
}
